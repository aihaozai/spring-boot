
############################################################
# Server 服务端相关配置
############################################################

# 配置api端口号
server.port=8082
# 错误页，指定发生错误时，跳转的URL
#server.error.path=/error
# session最大超时时间(分钟)，默认为30分钟
server.servlet.session.timeout=30m
# 配置context-path, 一般来说这个配置在正式发布的时候不配置
# 表示项目名称 配直时，默认为／。如果配置了，就要在访问路径中加上配直的路径。
#server.servlet.context-path=/myproject

############################################################
# Server - tomcat 相关常用配置
############################################################

# tomcat的URI编码
server.tomcat.uri-encoding=UTF-8
# tomcat最大线程数, 默认为200
server.tomcat.max-threads=500
# 存放Tomcat的日志、Dump等文件的临时文件夹，默认为系统的tmp文件夹
server.tomcat.basedir=H:/springboot-tomcat-tmp
# 打开Tomcat的Access日志，并可以设置日志格式的方法：
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b %D
# accesslog目录，默认在basedir/logs
#server.tomcat.accesslog.directory=
# 日志文件目录
logging.path=H:/springboot-tomcat-tmp
# 日志文件名称，默认为spring.log
logging.file=myapp.log

############################################################
# thymeleaf相关常用配置
############################################################
#是否开启缓存，开发时可设置为 false ，默认为 true
spring.thymeleaf.cache=false
#检查模板是否存在，默认为 true
spring.thymeleaf.check-template=true
#检查模板位置是否存在，默认为 true
spring.thymeleaf.check-template-location=true
#模板文件编码
spring.thymeleaf.encoding=UTF-8
#模板文件类型
#spring.thymeleaf.mode=HTML5
#模板文件位置
spring.thymeleaf.prefix=classpath:/templates/
#Content Type 配置
spring.thymeleaf.servlet.content-type=text/html
#模板文件后缀
spring.thymeleaf.suffix=.html


############################################################
# freemarker相关常用配置
############################################################
#HttpServletRequest 的属性是否可以覆盖 controller i:p model 的同名项
spring.freemarker.allow-request-override=false
#Http Session 的属性是否可以覆盖 controller model 的同名项
spring.freemarker.allow-session-override=false
#是否开启缓存
spring.freemarker.cache=false
#模板文件编码
spring.freemarker.charset=UTF-8
#是否检查模板位置
spring.freemarker.check-template-location=true
#Content Type 的值
spring.freemarker.content-type=text/html
#是否将 HttpServletRequest 中的属性添加到 Model
spring.freemarker.expose-request-attributes=false
#是否将 HttpSession 中的属性添加到 Model
spring.freemarker.expose-session-attributes=false
#模板文件后缀
spring.freemarker.suffix=.ftl
#模板文件位置
spring.freemarker.template-loader-path=classpath:/templates/

############################################################
# 静态资源
############################################################
spring.mvc.static-path-pattern=/**
spring.resources.static-locations=classpath:/static/

############################################################
# 文件上传
############################################################
#开启文件上传 默认false
spring.servlet.multipart.enabled=true
#文件写入磁盘的闽值，默认为0
spring.servlet.multipart.file-size-threshold=0
#上传文件的临时保存位置
spring.servlet.multipart.location=E:\\temp
#表示上传的单个文件的大小，默认为1MB
spring.servlet.multipart.max-file-size=1MB
#表示多文件的上传大小，默认为1MB
spring.servlet.multipart.max-request-size=10MB
#文件是否延迟解析，默认为false
spring.servlet.multipart.resolve-lazily=false

############################################################
# 数据库连接
############################################################
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.url=jdbc:mysql://localhost:3307/root?characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
#spring.datasource.username=root
#spring.datasource.password=haozai
############################################################
# jpa配置
############################################################
#是否在控制台打印 jPA执行过程生成的SQL
spring.jpa.show-sql=true
#表示 JPA 对应的数据库MYSQL
spring.jpa.database=mysql
#项目启动时根据实体类更新数据库中的表（其他可选值有 create create-drop validate none
spring.jpa.hibernate.ddl-auto=none
#使用的数据库方言是MySQL57Dialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

############################################################
# JDBC/MyBatis多数据源连接
############################################################
spring.datasource.defaultName=datasource
spring.datasource.names=primary,secondary,quartz
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3307/myproject?characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=haozai

#多数据源1
spring.datasource.primary.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.primary.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.primary.url=jdbc:mysql://localhost:3307/root?characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
spring.datasource.primary.username=root
spring.datasource.primary.password=haozai
#多数据源2
spring.datasource.secondary.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.secondary.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.secondary.url=jdbc:mysql://localhost:3307/haozai?characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
spring.datasource.secondary.username=root
spring.datasource.secondary.password=haozai

#多数据源quartz
spring.datasource.quartz.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.quartz.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.quartz.url=jdbc:mysql://localhost:3307/quartz?characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
spring.datasource.quartz.username=root
spring.datasource.quartz.password=haozai

#是否在控制台打印 jPA执行过程生成的SQL
spring.jpa.properties.show-sql=true
#表示 JPA 对应的数据库MYSQL
spring.jpa.properties.database=mysql
#项目启动时根据实体类更新数据库中的表（其他可选值有 create create-drop validate no
spring.jpa.properties.hibernate.hbm2ddl.auto=update
#使用的数据库方言是MySQL57Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
spring.jpa.open-in-view=false
spring.main.allow-bean-definition-overriding=true

############################################################
# Redis配置
############################################################
#Redis提供 database 为0-15
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=haozai
#最大连接数
spring.redis.jedis.pool.max-active=8
#最大空闲连接数
spring.redis.jedis.pool.max-idle=8
#最大阻塞等待时间
spring.redis.jedis.pool.max-wait=8
#最小空闲连接数
spring.redis.jedis.pool.min-idle=0
#缓存配置
spring.cache.cache-names=cl,c2
spring.cache.redis.time-to-live=120s
############################################################
#   热部署
############################################################
spring.devtools.restart.enabled=true
spring.devtools.restart.exclude=WEB-INF/**
spring.devtools.restart.additional-paths=src/main/java,src/main/resource
spring.devtools.restart.trigger-file=.trigger-file

#spring.cache.ehcache.config=classpath:config/ehcache.xml

#spring.security.user.name=sang
#spring.security.user.password=123
#spring.security.user.roles=admin

# rabbitmq
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
# 开启confirms回调 P -> Exchange
spring.rabbitmq.publisher-confirms=true
# 对 rabbitmqTemplate 进行监听,当消息由于server的原因无法到达queue时，就会被监听到，以便执行ReturnCallback方法
spring.rabbitmq.publisher-returns=true
# 消费端手动确认
spring.rabbitmq.listener.simple.acknowledge-mode=manual
spring.rabbitmq.listener.simple.prefetch=100

# mail
spring.mail.host=smtp.163.com
spring.mail.username=haozaimessage@163.com
spring.mail.password=haozai163
spring.mail.from=haozaimessage@163.com
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

#配置日志
logging.level.com.example.myproject: DEBUG
logging.level.org.springframework.web: INFO
logging.level.org.hibernate: ERROR
#采用相对路径方式将日志文件输出到【log/myspringboot.log】
#file: log/myspringboot.log
#采用绝对路径方式将日志文件输出到【/Users/wang/Downloads/myspringboot.log】
#file: /Users/wang/Downloads/myspringboot.log


#mybatis.mapper-locations=classpath:mapper/*.xml
#mybatis.type-aliases-package=com.example.myproject.entity

